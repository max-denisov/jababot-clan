from Utils.PeopleQueue import PeopleQueue
from Utils.VKHelper import helper
from model.Command import Command


class Parser:
    @staticmethod
    def parse_value(text, parameter_str):
        start_index = text.find(parameter_str) + len(parameter_str)
        return text[start_index:text.find('\n', start_index)]

    @staticmethod
    def handle_jaba(jaba_str):
        name = Parser.parse_value(jaba_str, "üê∏–ò–º—è –≤–∞—à–µ–π –∂–∞–±—ã: ")
        level = Parser.parse_value(jaba_str, "‚≠ê–£—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–π –∂–∞–±—ã: ")
        helper.write_msg("–≠—Ç–æ –∂–∞–±–∞ " + str(PeopleQueue.pull()) + ", " + name + " " + level + "—É—Ä–æ–≤–Ω—è")

    @staticmethod
    def handle_inventory(inventory_str):
        melee = Parser.parse_value(inventory_str, "üó°–ë–ª–∏–∂–Ω–∏–π –±–æ–π: ")
        ranged = Parser.parse_value(inventory_str, "üèπ–î–∞–ª—å–Ω–∏–π –±–æ–π: ")
        helper.write_msg("–û—Ä—É–∂–∏–µ " + str(PeopleQueue.pull()) + ", " + melee + " –∏ " + ranged)

    @staticmethod
    def parse_bot_command(command_type, command_str):
        if command_type == Command.JABA:
            Parser.handle_jaba(command_str)
        elif command_type == Command.INVENTORY:
            Parser.handle_inventory(command_str)
        else:
            helper.write_msg("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∂–∞–±–∞–±–æ—Ç–∞")